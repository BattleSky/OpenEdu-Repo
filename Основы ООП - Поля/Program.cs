using System;

namespace Основы_ООП___Поля
{
    // Классы - это тип данных ( что это такое данные о чем-то )
    // Тип данных - это правила по которым данные находятся в памяти
    // Данные представляются в виде байт и как именно они представляются в виде байт - тип

    // Объекты - участки памяти отформатированные в соовтетствии с типом данных
    // Каждый объект обязательно должен иметь тип

    public class RightTriangle //динамические данные
    { 
        // у каждого правильного треугольника будут
        // свои (притом, разные) данные о катетах и гипотенузах
        // это есть динамические данные
        // для этого надо будет создать объект класса
        public double Hypothenuse;
        public double[] Cathetes;
        
        // статические данные - это те данные, характерные для всех
        // объектов данного класса
        // для прямоугольных треукольников - это угол между катетами
        public static double AngleBetweenCathetes = Math.PI / 2;
    }

    /*
     * Пример с шенгенской визой:
     * Берем бланк - это класс. То есть как должны оформить данные о человеке
     * Заполняя бланк (вводя фамилию, имя и т.п.) создается объект человека
     * (форматируем человека в данном классе)
     * В этом случае ДИНАМИЧЕСКИЕ данные - это: ФИО
     * СТАТИЧЕСКИЕ данные - это, например, количество пунктов в анкете
     */
    public class Program
    {
        static void Main()
        {
            // Создание объекта-треугольника.

            // RightTriangle — это тип данных, который определяет, какую информацию
            // и как мы храним в файле о прямоугольном треугольнике

            // firstTriangle — это конкретная область памяти, отформатированная
            // в соответствии с типом RightTriangle
            var firstTriangle = new RightTriangle();
            // Обращение к динамическим полям
            firstTriangle.Hypothenuse = 5;
            firstTriangle.Cathetes = new double[2];
            firstTriangle.Cathetes[0] = 3;
            firstTriangle.Cathetes[1] = 4;

            //Обращение к статическому полю
            // притом, если изменить статическое поле - оно поменяется для всех экземпляров класса
            // так как является общим для них
            Console.WriteLine(RightTriangle.AngleBetweenCathetes);

        }
    }
}
